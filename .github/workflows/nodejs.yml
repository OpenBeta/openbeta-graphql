name: 'tests'

on:
  push:
    branches:
    - develop
    - test

  pull_request:

  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest

    needs: test
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: 'Checkout Project'
        uses: 'actions/checkout@v3'
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: vnguyen/openbeta-graph-api:latest

  test:
    runs-on: 'ubuntu-latest'

    steps:
      - name: 'Checkout Project'
        uses: 'actions/checkout@v3'
        with:
          fetch-depth: 1

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '16.15'
          cache: 'yarn'

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: 5
          mongodb-replica-set: rs0

      - name: Install dependencies
        run: yarn install --immutable

      - name: Lint code
        run: yarn lint

      - name: Wait for the database to start
        run: wget -qO- https://raw.githubusercontent.com/eficode/wait-for/$WAIT_FOR_VERSION/wait-for | sh -s -- localhost:27017 -- echo "Database is up"
        env:
          WAIT_FOR_VERSION: 4df3f9262d84cab0039c07bf861045fbb3c20ab7 # v2.2.3
      
      - name: Setup test user
        run: |
           source .env && \
           docker exec mongodb mongosh admin --eval "db.createUser({user: '${MONGO_INITDB_ROOT_USERNAME}', pwd: '${MONGO_INITDB_ROOT_PASSWORD}', roles: ['readWrite']})"

      - name: Restart mongo
        run: |
          docker container restart mongodb

      - name: Run tests
        run: yarn test --ci

      - name: Build sources
        run: yarn build-release --noEmit
